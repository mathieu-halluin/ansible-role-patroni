---

- name: Patroni | Install Patroni
  block:
    - name: Patroni | Copy patroni requirements.txt file
      ansible.builtin.copy:
        src: requirements.txt
        dest: /tmp/requirements.txt

    - name: Patroni | Install setuptools
      ansible.builtin.pip:
        name: setuptools<66.0.0
        state: latest
        executable: pip3
        extra_args: "--trusted-host=pypi.python.org --trusted-host=pypi.org --trusted-host=files.pythonhosted.org"
        umask: "0022"
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/local/bin:/usr/bin"

    - name: Patroni | Install requirements
      ansible.builtin.pip:
        requirements: /tmp/requirements.txt
        executable: pip3
        extra_args: "--trusted-host=pypi.python.org --trusted-host=pypi.org --trusted-host=files.pythonhosted.org"
        umask: "0022"
      environment:
        PATH: "{{ ansible_env.PATH }}:{{ postgresql_bin_dir }}:/usr/local/bin:/usr/bin"

    - name: "Patroni | Install patroni {{ patroni_install_version }}"
      ansible.builtin.pip:
        name: "patroni=={{ patroni_install_version }}"
        executable: pip3
        extra_args: "--trusted-host=pypi.python.org --trusted-host=pypi.org --trusted-host=files.pythonhosted.org"
        umask: "0022"
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/local/bin:/usr/bin"
      when: patroni_install_version != "latest"
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tags: ['patroni']

- name: Patroni | Create conf directory
  ansible.builtin.file:
    path: "{{ patroni_conf_dir }}"
    state: directory
    owner: postgres
    group: postgres
    mode: 0750
  tags: ['patroni']

- name: Patroni | Generate conf file "{{ patroni_conf_dir }}/patroni.yml"
  ansible.builtin.template:
    src: patroni.yml.j2
    dest: "{{ patroni_conf_dir }}/patroni.yml"
    owner: postgres
    group: postgres
    mode: 0640
  when: existing_pgcluster is not defined or not existing_pgcluster|bool
  tags: ['patroni']

- name: Patroni | Create patroni log directory
  ansible.builtin.file:
    path: "{{ patroni_log_dir }}"
    owner: postgres
    group: postgres
    state: directory
    mode: 0750
  when: patroni_log_destination == 'logfile'
  tags: ['patroni']

- name: Patroni | Add only one Patroni node | add_pgnode.yml
  block:
    - name: Patroni | Fetch patroni.yml conf file from master
      run_once: true
      ansible.builtin.fetch:
        src: /etc/patroni/patroni.yml
        dest: files/patroni.yml
        validate_checksum: true
        flat: true
      when: is_master is defined and is_master|bool

    - name: Patroni | Copy patroni.yml conf file to replica
      ansible.builtin.copy:
        src: files/patroni.yml
        dest: /etc/patroni/patroni.yml
        owner: postgres
        group: postgres
        mode: 0640

    - name: Patroni | Remove patroni.yml conf files from localhost
      run_once: true
      ansible.builtin.file:
        path: files/patroni.yml
        state: absent
      delegate_to: localhost

    - name: Patroni | Prepare patroni.yml conf file (replace "name","listen","connect_address")
      ansible.builtin.lineinfile:
        path: /etc/patroni/patroni.yml
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backrefs: true
      loop:
        - { regexp: '^name:', line: 'name: {{ ansible_hostname }}' }
        - { regexp: '^  listen: .*:{{ patroni_restapi_port }}$', line: '  listen: {{ hostvars[inventory_hostname].inventory_hostname }}:{{ patroni_restapi_port }}' }
        - { regexp: '^  connect_address: .*:{{ patroni_restapi_port }}$', line: '  connect_address: {{ hostvars[inventory_hostname].inventory_hostname }}:{{ patroni_restapi_port }}' }
        - { regexp: '^  listen: ((?!{{ patroni_restapi_port }}).)*$', line: '  listen: {{ hostvars[inventory_hostname].inventory_hostname }},127.0.0.1:{{ postgresql_port }}' }
        - { regexp: '^  connect_address: ((?!{{ patroni_restapi_port }}).)*$', line: '  connect_address: {{ hostvars[inventory_hostname].inventory_hostname }}:{{ postgresql_port }}' }
      loop_control:
        label: "{{ item.line }}"
      when: with_haproxy_load_balancing|bool or pgbouncer_install|bool or (cluster_vip is not defined or cluster_vip | length < 1)

    - name: Patroni | Prepare patroni.yml conf file (replace "name","listen","connect_address")
      ansible.builtin.lineinfile:
        path: /etc/patroni/patroni.yml
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backrefs: true
      loop:
        - { regexp: '^name:', line: 'name: {{ ansible_hostname }}' }
        - { regexp: '^  listen: .*:{{ patroni_restapi_port }}$', line: '  listen: {{ hostvars[inventory_hostname].inventory_hostname }}:{{ patroni_restapi_port }}' }
        - { regexp: '^  connect_address: .*:{{ patroni_restapi_port }}$', line: '  connect_address: {{ hostvars[inventory_hostname].inventory_hostname }}:{{ patroni_restapi_port }}' }
        - { regexp: '^  listen: ((?!{{ patroni_restapi_port }}).)*$', line: '  listen: {{ hostvars[inventory_hostname].inventory_hostname }},{{ cluster_vip }},127.0.0.1:{{ postgresql_port }}' }
        - { regexp: '^  connect_address: ((?!{{ patroni_restapi_port }}).)*$', line: '  connect_address: {{ hostvars[inventory_hostname].inventory_hostname }}:{{ postgresql_port }}' }
      loop_control:
        label: "{{ item.line }}"
      when: not with_haproxy_load_balancing|bool and not pgbouncer_install|bool and (cluster_vip is defined and cluster_vip | length > 0)
  when: existing_pgcluster is defined and existing_pgcluster|bool
  tags: ['patroni']

- name: Patroni | Copy systemd service file "/etc/systemd/system/patroni.service"
  ansible.builtin.template:
    src: patroni.service.j2
    dest: /etc/systemd/system/patroni.service
    owner: postgres
    group: postgres
    mode: 0644
  tags: ['patroni']
