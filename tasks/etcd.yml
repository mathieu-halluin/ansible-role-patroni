---

- name: Etcd | Install etcd packages
  ansible.builtin.apt:
    name: "{{ etcd_version }}"
    state: present
  register: etcd_status
  until: etcd_status is success
  delay: 5
  retries: 3
  tags: ['etcd']

- name: Etcd | Create etcd configuration directory
  ansible.builtin.file:
    path: "{{ etcd_conf_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0750
  tags: ['etcd']

- name: Etcd | Generate conf file "/etc/etcd/etcd.conf"
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  loop:
    - src: etcd.conf.j2
      dest: /etc/etcd/etcd.conf
    - src: etcd.service.j2
      dest: /etc/systemd/system/etcd.service
  tags: ['etcd']

- name: Etcd | Stop etcd service
  ansible.builtin.systemd:
    name: etcd
    state: stopped
  tags: ['etcd']

- name: Etcd | Enable and start etcd service
  ansible.builtin.systemd:
    daemon_reload: true
    name: etcd
    enabled: true
    state: started
  tags: ['etcd']

- name: Etcd | Wait for port 2379 to become open on the host
  ansible.builtin.wait_for:
    port: 2379
    host: 127.0.0.1
    state: started
    timeout: 60
    delay: 10
  ignore_errors: false
  tags: ['etcd']

- name: Etcd | Check etcd cluster health
  block:
    - name: Etcd | Wait until the etcd cluster is healthy
      ansible.builtin.shell: |
        ETCDCTL_API=3 /usr/bin/etcdctl endpoint health --endpoints=http://{{ inventory_hostname }}:2379
      register: etcd_health_result
      until: "'is healthy' in etcd_health_result.stderr"
      retries: 5
      delay: 10
      changed_when: false
      ignore_errors: false

    - name: Etcd | Display cluster health
      ansible.builtin.debug:
        msg: "{{ etcd_health_result.stderr }}"
  tags: ['etcd']
