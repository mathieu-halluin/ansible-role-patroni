---
# Hardware variables
openstack: false
lab: false

# Sysctl variables
sysctl_set: true
sysctl_conf:
  patroni:
    - { name: "vm.overcommit_memory", value: "2" }
    - { name: "vm.swappiness", value: "1" }
    - { name: "vm.min_free_kbytes", value: "102400" }
    - { name: "vm.dirty_expire_centisecs", value: "1000" }
    - { name: "vm.dirty_background_bytes", value: "67108864" }
    - { name: "vm.dirty_bytes", value: "536870912" }
    - { name: "vm.zone_reclaim_mode", value: "0" }
    - { name: "kernel.numa_balancing", value: "0" }
    - { name: "kernel.sched_autogroup_enabled", value: "0" }
    - { name: "net.ipv4.ip_nonlocal_bind", value: "1" }
    - { name: "net.ipv4.ip_forward", value: "1" }
    - { name: "net.ipv4.ip_local_port_range", value: "10000 65535" }
    - { name: "net.core.netdev_max_backlog", value: "10000" }
    - { name: "net.ipv4.tcp_max_syn_backlog", value: "8192" }
    - { name: "net.core.somaxconn", value: "65535" }
    - { name: "net.ipv4.tcp_tw_reuse", value: "1" }

# Etcd variables
dcs_exists: false  # Or 'true' if you don't want to deploy a new etcd cluster
etcd_version: "3.3.25+dfsg-6"
etcd_cluster_name: "etcd-{{ patroni_cluster_name }}"
etcd_data_dir: "/var/lib/etcd"
etcd_conf_dir: "/etc/etcd"
etcd_cluster_state: "new"

# PostgreSQL variables
postgresql_version: "12"
postgresql_port: "5432"
postgresql_cluster_name: "main"
postgresql_encoding: "UTF8"
postgresql_locale: "en_US.UTF-8"
postgresql_data_checksums: true
postgresql_password_encryption_algorithm: "scram-sha-256"
postgresql_exists: "false"

postgresql_bin_dir: "/usr/lib/postgresql/{{ postgresql_version }}/bin"
postgresql_log_dir: "/var/log/postgresql"
postgresql_data_dir: "/var/lib/postgresql/{{ postgresql_version }}/{{ postgresql_cluster_name }}"
postgresql_conf_dir: "/etc/postgresql/{{ postgresql_version }}/{{ postgresql_cluster_name }}"
postgresql_home_dir: "/var/lib/postgresql"
postgresql_wal_dir: ""
postgresql_unix_socket_dir: "/var/run/postgresql"

postgresql_stats_temp_directory_path: "/var/lib/pgsql_stats_tmp"
postgresql_stats_temp_directory_size: "1024m"

postgresql_databases: []
postgresql_pg_hba:
  - { type: "local", database: "all", user: "{{ patroni_superuser_username }}", address: "", method: "trust" }
  - { type: "local", database: "all", user: "all", address: "", method: "peer" }
  - { type: "host", database: "all", user: "all", address: "127.0.0.1/32", method: "{{ postgresql_password_encryption_algorithm }}" }
  - { type: "host", database: "all", user: "all", address: "::1/128", method: "{{ postgresql_password_encryption_algorithm }}" }

postgresql_pg_ident: []
postgresql_restore_command: ""

postgresql_apt_repository_keys: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
postgresql_apt_repository: "deb https://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main"
postgresql_packages:
  - postgresql-{{ postgresql_version }}
  - postgresql-client-{{ postgresql_version }}
  - postgresql-server-dev-{{ postgresql_version }}
  - postgresql-contrib-{{ postgresql_version }}
postgresql_parameters:
  - { option: "max_connections", value: "500" }
  - { option: "superuser_reserved_connections", value: "5" }
  - { option: "password_encryption", value: "{{ postgresql_password_encryption_algorithm }}" }
  - { option: "max_locks_per_transaction", value: "512" }
  - { option: "max_prepared_transactions", value: "0" }
  - { option: "huge_pages", value: "try" }
  - { option: "shared_buffers", value: "{{ (ansible_memtotal_mb * 0.25)|int }}MB" }
  - { option: "effective_cache_size", value: "{{ (ansible_memtotal_mb * 0.75)|int }}MB" }
  - { option: "work_mem", value: "128MB" }  # please change this value
  - { option: "maintenance_work_mem", value: "256MB" }  # please change this value
  - { option: "checkpoint_timeout", value: "15min" }
  - { option: "checkpoint_completion_target", value: "0.9" }
  - { option: "min_wal_size", value: "2GB" }
  - { option: "max_wal_size", value: "8GB" }  # or 16GB/32GB
  - { option: "wal_buffers", value: "32MB" }
  - { option: "default_statistics_target", value: "1000" }
  - { option: "seq_page_cost", value: "1" }
  - { option: "random_page_cost", value: "4" }  # "1.1" for SSD storage. Also, if your databases fits in shared_buffers
  - { option: "effective_io_concurrency", value: "2" }  # "200" for SSD storage
  - { option: "synchronous_commit", value: "on" }  # or 'off' if you can you lose single transactions in case of a crash
  - { option: "autovacuum", value: "on" }  # never turn off the autovacuum!
  - { option: "autovacuum_max_workers", value: "5" }
  - { option: "autovacuum_vacuum_scale_factor", value: "0.01" }  # or 0.005/0.001
  - { option: "autovacuum_analyze_scale_factor", value: "0.01" }
  - { option: "autovacuum_vacuum_cost_limit", value: "500" }  # or 1000/5000
  - { option: "autovacuum_vacuum_cost_delay", value: "2" }
  - { option: "autovacuum_naptime", value: "1s" }
  - { option: "max_files_per_process", value: "4096" }
  - { option: "archive_mode", value: "on" }
  - { option: "archive_timeout", value: "1800s" }
  - { option: "archive_command", value: "cd ." }
  - { option: "wal_level", value: "replica" }
  - { option: "wal_keep_size", value: "2GB" }
  - { option: "max_wal_senders", value: "10" }
  - { option: "max_replication_slots", value: "10" }
  - { option: "hot_standby", value: "on" }
  - { option: "wal_log_hints", value: "on" }
  - { option: "wal_compression", value: "on" }
  - { option: "shared_preload_libraries", value: "pg_stat_statements,auto_explain" }
  - { option: "pg_stat_statements.max", value: "10000" }
  - { option: "pg_stat_statements.track", value: "all" }
  - { option: "pg_stat_statements.track_utility", value: "false" }
  - { option: "pg_stat_statements.save", value: "true" }
  - { option: "auto_explain.log_min_duration", value: "10s" }
  - { option: "auto_explain.log_analyze", value: "true" }
  - { option: "auto_explain.log_buffers", value: "true" }
  - { option: "auto_explain.log_timing", value: "false" }
  - { option: "auto_explain.log_triggers", value: "true" }
  - { option: "auto_explain.log_verbose", value: "true" }
  - { option: "auto_explain.log_nested_statements", value: "true" }
  - { option: "auto_explain.sample_rate", value: "0.01" }
  - { option: "track_io_timing", value: "on" }
  - { option: "log_lock_waits", value: "on" }
  - { option: "log_temp_files", value: "0" }
  - { option: "track_activities", value: "on" }
  - { option: "track_counts", value: "on" }
  - { option: "track_functions", value: "all" }
  - { option: "log_checkpoints", value: "on" }
  - { option: "logging_collector", value: "on" }
  - { option: "log_truncate_on_rotation", value: "on" }
  - { option: "log_rotation_age", value: "1d" }
  - { option: "log_rotation_size", value: "0" }
  - { option: "log_line_prefix", value: "'%t [%p-%l] %r %q%u@%d '" }
  - { option: "log_filename", value: "postgresql-%a.log" }
  - { option: "log_directory", value: "{{ postgresql_log_dir }}" }
  - { option: "hot_standby_feedback", value: "on" }
  - { option: "max_standby_streaming_delay", value: "30s" }
  - { option: "wal_receiver_status_interval", value: "10s" }
  - { option: "idle_in_transaction_session_timeout", value: "10min" }
  - { option: "jit", value: "off" }
  - { option: "max_worker_processes", value: "24" }
  - { option: "max_parallel_workers", value: "8" }
  - { option: "max_parallel_workers_per_gather", value: "2" }
  - { option: "max_parallel_maintenance_workers", value: "2" }

# Swap variables
swap_file_create: true
swap_file_path: /swap
swap_file_size_mb: '8192'

# THP variables
disable_thp: true

# PAM variables
set_limits: true
limits_user: "postgres"
soft_nofile: 65536
hard_nofile: 200000

# I/O Scheduler variables
set_scheduler: true
scheduler:
  - { sched: "deadline", nr_requests: "1024", device: "sda" }

# Locales variables
locale_gen:
  - { language_country: "en_US", encoding: "UTF-8" }
locale: "en_US.UTF-8"

# Authentication variables
enable_ssh_key_based_authentication: true
ssh_key_user: "postgres"
ssh_known_hosts: "{% if 'patroni' in group_names %}{{ groups['patroni'] }}{% else %}{{ groups['postgresql'] }}{% endif %}"

# HAProxy variables
haproxy_version: "2.2.9-2+deb11u5"
cluster_vip: "0.0.0.0" # To change
vip_interface: "{{ ansible_default_ipv4.interface }}" 
with_haproxy_load_balancing: true  # or 'true' if you want to install and configure the load-balancing
haproxy_listen_port:
  master: 5000
  replicas: 5001
  replicas_sync: 5002
  replicas_async: 5003
  stats: 7000
haproxy_maxconn:
  global: 100000
  master: 10000
  replica: 10000
haproxy_timeout:
  client: "60m"
  server: "60m"

# Confd variables
confd_package_repo: "https://github.com/kelseyhightower/confd/releases/download/v0.16.0/confd-0.16.0-linux-amd64"

# Keepalived variables
keepalived_version: "1:2.1.5-0.2+deb11u1"
keepalived_scripts_dir: "/usr/libexec/keepalived"
keepalived_conf_dir: "/etc/keepalived"
keepalived_bin_dir: "/usr/bin"

# PGBouncer variables
pgbouncer_version: "1.15.0-1"
pgbouncer_install: true
pgbouncer_generate_userlist: true
pgbouncer_bin_dir: "/usr/bin"
pgbouncer_conf_dir: "/etc/pgbouncer"
pgbouncer_log_dir: "/var/log/pgbouncer"
pgbouncer_listen_addr: "{{ ansible_default_ipv4.address }}"
pgbouncer_listen_port: 6432
pgbouncer_default_pool_size: 20
pgbouncer_pools:
  - { name: "postgres", dbname: "postgres", pool_parameters: "" }
pgbouncer_admin_users: "postgres"
pgbouncer_stats_users: "postgres"
pgbouncer_auth_type: "{{ postgresql_password_encryption_algorithm }}"
pgbouncer_ignore_startup_parameters: "extra_float_digits,geqo,search_path"
pgbouncer_default_pool_mode: "session"
pgbouncer_max_client_conn: 10000
pgbouncer_max_db_connections: 1000
pgbouncer_query_wait_timeout: 120

# Patroni variables
patroni_cluster_name: "postgres-cluster"
patroni_cluster_bootstrap_method: "initdb"
patroni_install_version: "3.0.2"

patroni_log_dir: /var/log/patroni
patroni_conf_dir: /etc/patroni

patroni_superuser_username: "postgres"
patroni_superuser_password: "postgres-pass"
patroni_replication_username: "replicator"
patroni_replication_password: "replicator-pass"

patroni_log_destination: logfile
patroni_log_level: info
patroni_log_traceback_level: error
patroni_log_format: "%(asctime)s %(levelname)s: %(message)s"
patroni_log_dateformat: ""
patroni_log_max_queue_size: 1000
patroni_log_file_num: 4
patroni_log_file_size: 25000000  # bytes
patroni_log_loggers_patroni_postmaster: warning
patroni_log_loggers_urllib3: warning 

patroni_etcd_hosts: []
patroni_restapi_port: 8008
patroni_ttl: 30
patroni_loop_wait: 10
patroni_retry_timeout: 10
patroni_maximum_lag_on_failover: 1048576
patroni_master_start_timeout: 300

synchronous_mode: true  # or 'true' for enable synchronous database replication
synchronous_mode_strict: true  # if 'true' then block all client writes to the master, when a synchronous replica is not available
synchronous_node_count: 2  # number of synchronous standby databases

patroni_postgresql_use_pg_rewind: true
patroni_standby_cluster:
  host: ""
  port: "5432"
  
patroni_remove_data_directory_on_rewind_failure: false
patroni_remove_data_directory_on_diverged_timelines: false
patroni_callbacks: []
patroni_create_replica_methods:
  - basebackup
basebackup:
  - {option: "max-rate", value: "100M"}
  - {option: "checkpoint", value: "fast"}

patroni_watchdog_mode: automatic
patroni_watchdog_device: /dev/watchdog
